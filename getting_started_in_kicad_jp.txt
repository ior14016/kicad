はじめに
    この文章はKicad公式ドキュメントVer8.0(https://docs.kicad.org/8.0/en/getting_started_in_kicad/getting_started_in_kicad.html)を翻訳し，実習用に編集したものです．
    一部簡略されている部分があるため，深く知識を得たい場合は，公式ドキュメントに目を通すことをおすすめします．
    
    公式ドキュメントは日本語も存在しますが，翻訳が不完全です．本文書はKicad(Ver8.0)で使用されているUIを元に"日本語"で説明を行いますが，今後文章が変化することが予想されます．
    Google翻訳やDeepL翻訳などを使用して読み進めることをおすすめしますが，画像内の言語は翻訳できないため，普段から"英語"で使用することを強く推奨します．
    
    本文書はWindows11での操作方法を説明します．それ以外のOSなどについては異なる外見や動作を行うことが予想されますが，読み替えるなどして自己対応をお願いいたします．
    また，本文書は教育目的のみに使用することを前提としています．著作権や営利目的などの権利等については，Kicad公式ドキュメントに記載されていることに従ってください．

    基本的に，文字を入力する際は"半角英数字"のみを使用します．全角文字や絵文字などを使用すると文字化けなどが発生し，最悪の場合は製作したデータが破損・読み込めないことが予想されます．
    必ず，"半角英数字"を使用してください．それ以外は動作を保証できません．

    KiCadは開発段階のソフトウェアですので，突発的な動作停止(フリーズ)もありえます． フリーズを抑える方法はおまけに記載しますが,せっかくの作業データを失わないよう，こまめにデータを保存することをおすすめします．
    # "Ctrl + S"で保存．

目次

KiCadとは?
    電化製品などの中に必ず存在するのが"PCB基板"です．
    PCB基板は小型・軽量・大量生産に向いており，スマートフォンなどの電子機器が一般的となった現代社会には欠かせないものとなっています．
    そんなPCB基板を設計できるソフトウェアが"KiCad"です．
    KiCadを使用することで，部品や配線などをソフトウェア内で配置することができ，実際に基板を製作する前に不具合がないかを確認することができます．
    そして，KiCadで製作した回路は国内外の基板製作会社に外注することで，あなたが望む基板を安価に入手することができます．
    ぜひKiCadをマスターして，電子工作へのさらなるスキルアップを目指してください！


part1:プロジェクト
    KiCadへようこそ！あなたにとって偉大なる一歩です．

    インストールを終えたら，最初の初期設定をしましょう．
    KiCad を開くと，"プロジェクトマネージャー"が表示されます．
    # KiCadを全く起動したことがない人は初期設定を尋ねられます．
    環境設定(Preference) -> 言語設定(Set Language)から，"日本語"を選びましょう．
    # 個人的には(公式ドキュメントが英語なので)"英語"で行うことを推奨しますが，本文章では"日本語"で進めていきます．

    基本的な流れとしては，"回路図エディター"で回路図を書き，"PCBエディター"で部品の配置や基板の形や大きさを設定します．

    設計図はプロジェクトごとに分けて管理しておきたいため，ファイル -> 新規プロジェクト をクリックし，"docment"フォルダに新しく"kicad-project"フォルダを作成し，"kicad-project"フォルダ内に"getting-started"と名付けたプロジェクトを作成しましょう．
    この時，プロジェクト名は必ず"半角英数字"で命名しなければなりません．日本語などの全角文字・数字・絵文字を使用した際の動作は保証できません．
    "このプロジェクト用に新しいフォルダを作成" チェックボックスがチェックされていることを確認し，"保存"をクリックします．
    これで，プロジェクトと同じ名前の新しいサブフォルダーにプロジェクトファイルが作成されます．
    [fig.001]


part2:回路図
    いよいよ回路図を書いていきます．
    まずは例として簡単な回路図を書いていきましょう．
    具体的には以下の回路部品で構成されるLEDを光らせる回路です．

    構成回路部品
        単三乾電池x2
        抵抗(1kohm)x1
        LED(青色)x1
    
    以上の回路部品で構成される回路図を一緒に作成していきましょう．

    シンボルライブラリの設定
        皆さんがよく目にする回路部品図は，KiCadでは"シンボル"と呼ばれています．
        それらシンボルをまとめた一覧表，または辞書のようなもの，それが"シンボルライブラリ"です．
        基本的には"シンボルライブラリ"から回路図に必要な"シンボル"を選び，回路図上に配置していくのが大まかな流れです．

        最初に"回路図エディタ"を開くと，グローバルシンボルライブラリテーブルの設定方法を尋ねるウィンドウが表示されます．
        "既定のグローバルシンボルライブラリテーブルをコピーする(推奨)"を選びましょう．
        # デフォルトのライブラリテーブルファイルの場所は "C:\Program Files\KiCad\8.0\share\kicad\template\"となります．

    回路図エディタの基本
        右クリックorマウスホイールを押しながらマウスを動かすと，回路図を"パン"(撮影技法で用いられる専門用語，左右に降ることを意味する．上下に降るときは"チルト"と呼ぶ)することができます．
        マウスホイールを動かすと拡大(ズームイン)・縮小(ズームアウト)ができます

    回路図シートのセットアップ
        回路図で何かを描画する前に，回路図シート自体を設定します． 
        これを行うことで，完成した回路図を印刷or電子データとして残す際に書式が整い，見た目がきれいになります．

        ファイル -> ページ設定 回路図にタイトルと日付を与え 必要に応じて用紙サイズを変更します．
        今回は以下のようにします．

            発行日:"<<<"を選択(本日の日付が入ります)
            リビジョン:"1.0.0"(バージョン管理の際に使用します)
            タイトル:"LED-test"(プロジェクト名を記載してください)
            会社名:あなたの名前(私は"ior14016jp"とします)

        枠の右下に反映されていればOKです．
        [fig]

    回路図へのシンボルの追加
        回路図にシンボルを追加して回路を作り始めます．

        ウィンドウの右側にあるツールバーから "シンボルを追加" ボタンをクリックすると"シンボルを選択"ウィンドウが開きます．
        # ショートカットキーは"A"
        # 初期設定ウィンドウが出た際は，"既定のグローバルフットプリントライブラリテーブルをコピー(推奨)"を選んでください．
        "シンボルを選択"ウィンドウには様々な回路記号が並んでいます．
        ここからあなたが使用したい回路部品を選んで配置していきます．
        "フィルター"に"LED"と打ち込んでみましょう．
        様々な種類のLEDが表示されますが，最も汎用的な"LED"を選び，"OK"を押します．
        [fig]
        選んだ"LED"シンボルがマウスに追従しますので，シートの真ん中あたりに左クリックで配置します．
        
        # もし配置するものを間違えた場合や，今何を行っているかわからなくなった場合は，慌てず"ESC"キーを複数回押しましょう．
        # シート上の部品の上で右クリック -> 削除 を選択すると，部品を削除できます．
        # 削除のショートカットキーは左クリックして"Delete"

        同様にして，単四電池(Battery_cell)を２つと抵抗(R)を1つ配置してみましょう．

    オブジェクトの選択と移動
        必要なシンボルがシート上に配置できましたが，向きが望ましくありません．
        シンボルを適切な位置に移動，回転しましょう．
        
        移動したいシンボルを左クリックして選択した後，ドラッグすることで移動できます．
        #　動かせない場合は右側のツールバーで"アイテムを選択"状態になっているか確認してください．"ESC"キーを数回押すことでも"アイテムを選択"状態にすることができますす．
        回転させたいシンボルを左クリックしましょう．
        プロパティ内に"向き"，"X軸でミラー"，"Y軸でミラー"の3項目がありますので，提示された図のように配置してみましょう．
        [fig]
        # ショートカットキーは"R"(回転)，"X"(X軸側にミラー)，"Y"(Y軸側にミラー)

    回路図の配線
        ただシンボルを配置しただけでは意味がありません．
        各シンボル間をつなげるための配線を行います．

        シンボルからはピンが伸びており，その先端には必ず小さな丸がついています．
        この小さな丸はシンボルピンが配線されていないことを意味し，シンボルピン間をワイヤーで配線することでこれを修正することができます．

        ワイヤーを配線するためには右側のツールバーから"ワイヤーを追加"を選びましょう．
        # ショートカットキーは"W"
        # 右側のツールボックスには"ワイヤーを選択"の下に，"パスを追加"という非常によく似たアイコンがあります．本文章内では使用しないため，間違えないよう注意してください．
        [fig]
        マウスカーソルが変化したことがわかります．
        お気づきかもしれませんが，マウスカーソルは選択されているモードによって若干変化しています．
        なにかが間違っていると感じた場合は，マウスカーソルの形や右側のツールバーを見て，選択されているモードが間違っていないかを確認してみてください．

        ワイヤーを選択した後，左クリックを行うと，ワイヤーが伸び始めます．
        ワイヤーはシンボルピンをクリックするか，任意の場所をダブルクリックするまでワイヤーは描画され続けます．
        
        ワイヤーを描画するもう一つの方法は接続されていないピンにカーソルを合わせることです．
        マウスカーソルが変化し，その位置からワイヤーを描画することができます．

        ワイヤーの使い方をマスターしたら，図のように配線してみましょう．
        [fig]

        次に，回路図にパワーとグランドのシンボルを追加します．
        電源シンボルとグランドシンボルは，Powerシンボルライブラリに多数用意されています．
        右側ツールバーから"電源シンボルを追加"を選択しましょう．
        # ショートカットキーは"P"
        # 先にシンボルを追加したように，ツールバーから"シンボルを追加" ボタンをクリックして，"シンボルを選択"ウィンドウからも追加できます.
        様々な電圧に対応する電源シンボルが表示されますが，"VCC"と"GND"を図のように配置して,配線してください．
        [fig]

        配線の完成です．

    注釈の配置
        シンボルの側には，コメントらしきものが配置されています．
        本回路にはわずか4つしか部品がありませんが，大規模な回路には数百単位での部品が存在することが予想されます．
        それら全てが同じ電圧，同じ抵抗値，同じ型番であることはほぼありえません．
        1つ1つの部品を区別できる，注釈を添える必要があります．
        # この作業は"アノテーション"と呼ばれています．

        上側のツールバーから"回路図シンボルのリファレンス指定子を記入"を選択すると，"回路図をアノテーション"ウィンドウが開きます．
        "アノテーションをクリア"を選択すると，シンボルの側にあるコメントらしきものが変化します．
        この状態で，"アノテーション"を選択すると，数字が割り振られます．
        これで部品ごとに名前をつけることができました．

    シンボルのプロパティ
        そういえば，乾電池の電圧や抵抗値，LEDの色などをどこにも記載していません．
        電池を右クリックして"プロパティ"を選びましょう．
        # ショートカットキーは"E"
        "シンボルのプロパティ"ウィンドウが表示されます．
        値には"Battery_cell"と記載されていますが，"1.5V"と書き換えましょう．
        同様にしてすべての部品に以下のようにプロパティを編集してください．

            ("BT1"欄:1.5V)
            "BT2"欄:1.5V
            "R1欄":1kohm
            "D1欄":Blue

        # 半角英数字以外は使用しないでください！ 動作を保証できません！

    フットプリントの割り当て
        "フットプリント"というものが存在します．
        これは基板に抵抗やLEDなどをはんだ付けするための接着部分("ランド"or"パッド"と呼ばれます)を正確に図で示したものです．
        しかし，回路部品には様々な形，大きさ，型番が存在します．
        電池を例にとっても，単三電池と単四電池では電圧は同じですが，大きさが全く違います．
        そのため，シンボルにどのような部品を使用するかを正確に割り当てる必要があります．
        部品の大きさは規格化されているため，規格に沿った部品はKiCadが用意しているフットプリントライブラリから選択するだけで問題ありません．

        上側のツールバーから"フットプリント割り当てツールを実行"を選ぶと，"フットプリントを割り当て"ウィンドウが開きます．
        左右にあるフットプリントライブラリから適合するものを選び，シート上に配置されているシンボルに割り当てていきます．

        左側にあるフットプリントライブラリから，"Battery"を選びます．
        膨大な量から適合するものを選ぶのは骨が折れるため，"フットプリントフィルター"右側にある3つのフィルター機能を使って絞り込みます．
        主に使用するのは中央と右側のフィルター機能です．検索部分に"AAA"と入力してみましょう．
        # "AAA"は"単四電池"を意味します．JIS規格では"R03"と表記されます．
        "フィルターしたフットプリント"の一覧に表示されているものを右クリックすると，フットプリントを見ることができます．
        今回は"BatteryHolder_KeyStone_2466_1xAAA"を使用します．

        "BT1"を選択した後，"BatteryHolder_KeyStone_2466_1xAAA"をダブルクリックすると，フットプリントが割り当てられます．
        同様にしてその他の部品にもフットプリントを割り当てます．
        # ここで使用するフットプリントはKiCadをマスターしてもらうためのチュートリアルなので，気に入ったものを使用して構いません．

        例として，以下のものを使用します．
            "BT1"欄:Battery:BatteryHolder_KeyStone_2466_1xAAA
            "BT2"欄:Battery:BatteryHolder_KeyStone_2466_1xAAA
            "R1欄"欄:Resistor_SMD:R_0603_1608Metric
            "D1欄"欄:LED_SMD:LED_0603_1608Metric
        
        これで，部品ごとにフットプリントが割り当てられました．

    電気的ルールのチェック(ERC)
        回路図が完成しました．問題がないかを確認するため，チェックを行いましょう．

        上側のツールバーから"エレクトリカルルールのチェックを実行"を選択すると，"エレクトリカルルールチェッカー(ERC)"ウィンドウが開きます．

        些細なエラーも見逃さないように，"すべて"にチェックを入れ，"ERCを実行"をクリックしましょう．
        [fig]
        エラーが出ました...残念です．

        エラーメッセージを見ると，2つとも"電源入力ピンが電源出力ピンによって駆動されていない"と表示されています．
        回路図を見ると，なにやら矢印が2つ指示されています．
        この矢印はERCに違反している部分を指しています．一体何が駄目なのでしょうか．

        実はこの回路はまだ不完全なのです．
        そして，このエラーメッセージはKiCadではよくあるERCエラーです．

        "エレクトリカルルールチェッカー(ERC)"ウインドウを閉じて，右側ツールバーから"電源シンボルを追加"を選択しましょう．
        "PWR_FLAG"をVCCとGNDの側に1つずつ配置し，それぞれを矢印にワイヤーで接続しましょう．
        [fig]
        もう一度，ERCを行います．
        "すべてのマーカーを削除"を選択してから，ERCを実行してみましょう．
        どうでしょうか？無事にエラーが消えましたか？

        # なぜ"PWR_FLAG"が必要なの？
        # 人間(製作者，設計者)にとっては，VCCとGNDがバッテリーや電源装置によって駆動されていることは明らかですが，回路図ではそれを明示的に示す必要があります．
        # 例えば，今回製作するモバイルバッテリーなどには，"回路に入力する電源"と"回路から出力される電源"が存在します．
        # このうち，"回路に入力する電源"によって，モバイルバッテリーに内蔵されている回路は駆動し,"回路から出力される電源"によって，外部の機器を駆動(スマートフォンを充電など)します．
        # しかし，KiCadから見ればそんなことはわかりません．どちらも同じ"電源"です．
        # したがって，"回路に入力する電源"を"回路を駆動する電源"として，明確にKiCadに示すために"PWR_FLAG"が必要なのです．

    部品表
        このパートは必須ではありませんが，設計していると後々必要になりますので，お話します．
        回路シート上にある部品の一覧をエクセルなどの"表計算ソフトウェア"で表示できるファイルを出力します．
        この部品表を"BOM表"といい，部品を発注する際などに役に立ちます．

        上部ツールバーから"現在の回路図から部品表を作成"を選択し，"シンボルフィールドテーブル"ウィンドウを開きます．
        今のところ，既定の設定で問題ありません．
        "出力ファイル"右側の"フォルダアイコン"を選択して，保存しましょう．
        "相対パスを指定しますか"と聞かれますが，"いいえ"を選択し，"エクスポート"を選択すると，BOM表が出力されます．

        試しに，BOM表をエクセルで開いてみましょう．

    これで回路図が完成しました．

part3:回路基板
    回路図が完成しました．しかし，まだ部品を基盤の上のどこに配置するかなどは決まっていません．
    実際に製品となるPCB基板を"PCBエディター"を使って製作していきます．

    PCBエディターの基本
        上部ツールバーから"基板をPCBエディターを開く"を選択すると，"PCBエディター"ウィンドウが開きます．
        # 誤字ではありません．KiCadのUIがそう書いてるんです．
        以降の作業は"PCBエディター"をメインとして使います．
        操作方法は回路図エディターと同じく，マウスのホイールボタンまたは右ボタンでドラッグしてパンし，マウスホイールでズームします．

    ボードのセットアップとスタックアップ(デザインルール)
        このセクションはPCB基板を製作する際，完成度合いを大きく左右する重要なセクションです．最悪の場合，お金を払って"産業廃棄物"が出来上がります．(3敗)
        特に"スタックアップ"は非常に重要で，外部に基板を発注したりする際には，製造会社それぞれの仕様に合わせる必要があります．(2敗)

        ボードをデザインする前に、ページサイズを設定し、タイトルブロックに情報を追加します。
        ファイル -> ページ設定... をクリックし、適切な用紙サイズを選択し、日付、改訂、タイトルを"part2:回路図"の"回路図シートのセットアップ"で設定したように入力します．

            発行日:"<<<"を選択(本日の日付が入ります)
            リビジョン:"1.0.0"(バージョン管理の際に使用します)
            タイトル:"LED-test"(プロジェクト名を記載してください)
            会社名:あなたの名前(私は"ior14016jp"とします)

        次に，ファイル -> 基板の設定 でPCB基板の製造方法を定義します．

        最も重要な設定は"スタックアップ"，つまりPCBが持つ銅と誘電体層（とその厚さ）,そしてデザインルール(例えばトラックとビアのサイズ)と間隔です。
        "基板スタックアップ"から，"物理的スタックアップ"を選択してください，加工したい基板(生基板と言ったりします)によって適切に設定する必要があります．
        今回は初期設定に合わせた生基板を用意しているため，変更する必要はありません．

        次に，"デザインルール"の"制約"を選んでください．
        このページの設定は、ボードデザイン内の全てのものに優先するデザインルールを指定します。
        ここで設定を間違えると，最終段階で手直しが大量に発生します．(1敗)
        このガイドの目的では、デフォルトで問題ありません．しかし、実際のプロジェクトでは、外部に基板を発注したりする際には，製造会社それぞれの仕様に合わせる必要があります．

        最後に，"デザインルール"から"ネットクラス"を選択してください．
        ここでは配線間の最小幅や，絶縁部分の最小大きさなどを設定できます．
        例えば，"電源部分"は大電流が予想されるため，配線の抵抗値を下げるために配線の幅を太くすることがあります．
        "ネットクラス"下部の"+"アイコンを選択しましょう．
        新しいリストが追加されるので，"名前"に"PWR"と入力し，"クリアランス"と"配線幅"を"0.6mm"に変更します．
        # 削除する場合は"ゴミ箱"アイコンを選択してください．
        このままでは反映されないので，"ネットクラス割り当て"下部の"+"アイコンを選択し，"パターン"に"VCC"，"ネットクラス"に"PWR"を割り当ててください．
        問題がなければOKを選択し，ボードのセットアップとスタックアップ(デザインルール)は完了です．
        # こまめに保存することをおすすめします．

    回路図からの変更のインポート
        初期設定が終わりました．早速，PCB基板上に部品を乗せていきましょう．

        上部ツールバーから"回路図で行われた変更で基板(PCB)を更新"を選択します．
        # ショートカットキーは"F8"
        "基板を更新"を選択してエラーが出ないことを確認してください．
        # エラーが出た場合は，エラーメッセージをしっかり読んでください．
        "閉じる"を選択すると，マウスに追従して私達が先ほど選択したフットプリントが表示されます．
        左クリックでフットプリントを配置することができます．

        注意する点は，回路図エディターで行われた変更はPCBエディター側に自動で変更されません．
        必ず，"回路図で行われた変更で基板(PCB)を更新"を選択しましょう．
    
    # 順番を繰り上げ変更
    PCB基板の3D表示
        部品を配置できたので，試しに3Dモデルを見てみましょう．
        上部ツールバーから"3Dビューアーウィンドウを表示"を選択しましょう．
        # ショートカットキーは"Alt"+"3"(結構フリーズする)

        どうでしょうか？ 理想通りの配置になっていますでしょうか．
        マウスの中ボタンでドラッグしてパンし，マウスの左ボタンでドラッグして周回します．
        もし，3Dモデルが重なり合っている場合は，"干渉"を起こしていることがはっきりと分かると思います．
        この機能は非常によく使用し，設計ミスを事前に防ぐことができます．
        
        上部ツールバーから"レイトレーシングを使って現在のビューをレンダリング"を選択すると，より正確な描画をすることができます．
        # 注意！
        # この機能はCPUに加わる負荷が非常に大きいものです！部品数の多い複雑な回路にレイトレーシングを適用してカメラ操作を行うと，ソフトウェアがフリーズすることがあります！

        3Dビューアーウィンドウを閉じて終了しましょう．

    フットプリントの配置修正
        PCBエディターに配置したフットプリントをよく見ると，細い線で部品同士がつながっていると思います．
        実は先程，回路図エディターで配線した端子同士をソフトウェアが表示してくれているのです．
        設計者はこの細線を頼りに，自由に配線をすることができますが，今のままでは交差場所が多く，上手に配線できないことが予想されます．
        絡まった紐を解くように，フットプリント配置を修正しましょう．

        移動したいフットプリントを左クリックすることで移動できます．
        # うまく選択できない場合は，右下の"フィルター選択"から"フットプリント"のみにチェックを入れてみましょう．
        # 移動後は"すべてのアイテム"に戻すのを忘れずに！
        フットプリントを選択した状態で右クリックを選択して，"右回転","左回転"を選択することでフットプリントを90度ごとに回転させることができます．
        # ショートカットキーは"R","Shift"+"R"
        また，部品配置を反対面に移動させたい場合は，フットプリントを選択した状態で右クリックを選択して，"配置面を変更/修正"を選択しましょう．
        # ショートカットキーは"F"
        フットプリントの外枠が青色になればOKです．

        絡まった紐は，解けましたか？

    配線
        細い線の根本は"パッド"です．
        これらパッド間を配線していきます．

        右側ツールバーから"配線"を選択します．
        # ショートカットキーは"X"
        細い線を参考に，パッド間を配線してください．
        配線作業中に右クリックして，"貫通ビアを配置"を選択して左クリックすると，"ビア"がその場に配置されます．
        # ショートカットキーは"V"
        "ビア"は基板の表と裏を行き来するための穴です．
        ビアを設置したあとに配線を伸ばすと，配線の色が赤から青に変化しています．
        赤い配線は基板の表側を意味し，青い配線は基板の裏側を意味します．
        必要に応じて使い分けてください
        # 表面実装用(SMD)の抵抗とLEDを使用している場合は，その部品が配置されている面でないとパッドが繋がりません！

        一部だけ，配線の太さが太くなっている箇所があります．
        これは先程設定した，デザインルールのネットクラスが関係しています．
        配線を拡大すると，"VCC"と記載されていることがわかります．
        必要に応じて，ネットクラスを調整しましょう．

        この状態でPCB基板の3D表示を行うと，配線が追加されているのがわかります．

    基板のアウトライン(外形線)，レイヤーの選択
        先程からPCB基板の3D表示を行うと，"基板のアウトラインが欠如している"とのエラーが表示されています．
        これは基板のアウトラインを定めていなことによるエラーです．

        PCBエディターに戻り，右側ツールバーから，"矩形を描画"を選択します．
        この状態で回路を囲むように2点を選択すると矩形が描画されますが，これでは基板のアウトラインを描画できていません．
        実際，PCB基板の3D表示を行うと，"基板のアウトラインが欠如している"とのエラーが引き続き表示されています．

        これは"レイヤー"が間違っているからです．

        右側の"外観"にはレイヤーの一覧が並んでいます．
        一番上には"F.Cu"，その下には"B.Cu"があり，そのどちらかの左に三角印があります．
        この"F.Cu"は"基盤表面の導体層"のレイヤーを表し，先程まで赤い配線を描いていたレイヤーを示しています．
        同様に，"B.Cu"は"基盤裏面の導体層"のレイヤーを表し，先程まで青い配線を描いていたレイヤーを示しています．

        このレイヤー指定が間違っていたため，矩形を描画しても"配線"と認識されて描画されてしまったのが原因です．
        では，基板のアウトラインに対応するレイヤーはどれでしょう．
        "Edge.Cuts"を選択してください．左側に三角印が表示され，レイヤーが指定されていればOKです．
        この状態で先のように，回路を囲むように2点を選択すると，無事に基板のアウトラインが描画され，PCB基板の3D表示を行うと，エラーが表示されなくなっていると思います．

        "矩形を描画"以外にも，"線を描画"，"円弧を描画"，"塩を描画"，"ポリゴンを描く"などがあります．
        各自，好きなように描画して，3D表示に反映されているか確認してみましょう．

        これでPCB基板は完成です．

    基板の塗りつぶし
        技術的なテクニックのお話です．おまけ程度に聞いて下さい．
        F.CUレイヤーを選択した状態で，右側ツールバーから"塗りつぶしゾーン"を追加を選択すると，"導体ゾーンのプロパティ"ウィンドウが開きます．
        "レイヤー"の"F.Cu"にチェックが入ってることを確認し，"ネット"から"GND"を選択し，"OK"を選択し，基板のアウトラインを囲むように描画してみましょう．
        赤い斜線で囲まれたと思います．
        この状態で．右クリック -> ゾーン -> すべてのゾーンを塗りつぶしを選択すると，基板のアウトラインから内側が塗りつぶされたことがわかります．
        この塗りつぶされた部分は，すべて"GND"となりました．
        先ほど配線したGND線を削除しても，問題ないことがわかります．
        PCB基板の3D表示を行なって，確認してみましょう．

        # なぜ塗りつぶすの？
        # この作業は"ベタ塗り"と呼ばれ，主にノイズ対策のために使われるテクニックです．
        # 本当は両面をベタ塗りし，両面を導通させるためのビアを等間隔で大量に配置しなければノイズ対策にならないのですが，ここでは詳しく説明しません．

    デザインルールチェック(DRC)
        完成した基板の最終確認です．
        ボードのセットアップとスタックアップ(デザインルール)で設定した項目によって，基板が問題なく製造できるかのチェックを行います．
        # 何度も言いますが，ボードのセットアップとスタックアップ(デザインルール)が間違っていると，外注した際に，お金を払って"産業廃棄物"を作ることになります．

        上部ツールバーから"デザインルールチェッカーのウインドウを表示"を選択すると"デザインルールチェッカー"ウィンドウが開きます．

        あらゆるチェックマークにチェックを入れて，"DRCを実行"を選択しましょう．
        大量にエラーが出るかもしれませんが，一つ一つ修正しましょう．お金を払って産業廃棄物を生産するよりマシです．

        エラーが全て消えたらPCB基板は完成です．
        お疲れ様でした！

part4:外注
    製作した基板を基板製作会社に外注するにはどうすればいいのでしょうか．
    ここでは"PCBWay"という，中国の基板製作会社に基板を外注することを想定してお話します．
    なお，PCBWay公式HPには詳細な情報がありますので，そちらも御覧ください．
    https://www.pcbway.jp/helpcenter/generate_gerber/Generate_Gerber_file_from_Kicad.html

    プロジェクトマネージャーから，"プラグイン&コンテンツマネージャー"を選択しましょう．
    ウィンドウが開きますので，フィルターに"PCBWay"と入力し，"PCBWay Plug-in for KiCad"をインストールしましょう．
    このままでは"インストールを保留中"となり，まだインストールがされていない状態なので，"保留中の変更を適用"を選択すると，インストールが実行されます．

    インストールが完了したら，PCBエディターに戻ると，上部ツールバーに"PCBWay Plug-in for KiCad"が追加されています．
    これを選択すると，なんと自動的にブラウザが立ち上がり，製造・購入画面の手前まで完了しています．
    後は，必要な枚数とメタルマスクや部品実装サービスのオプションを設定し，配送サービスを選び，支払いを済ませると数日後には基板が手元に届きます！
    # 配送サービスは"DHL"を選ぶことを強く推奨します．
    # DHLはドイツの国際輸送物流会社です．日本にもDHL JAPANという支部があり，安心・安全・高速配達のサービスを提供してくれます．
    # 他の配送サービスはDHLと比べて格安ですが，配達まで時間がかかり，荷物をよく紛失します(!?)

まとめ
    これにてKiCadのチュートリアルは終了です．
    覚えることは多いでしょうが，数回ほど繰り返してみると，いつの間にか一連の作業が20分ほどで終わってしまいます．
    ソフトウェア上では費用は発生しません！　慣れるまで繰り返し練習しましょう！

    2日目はいよいよ，乾電池モバイルバッテリーの回路を設計していただきます．
    
    自作シンボルやフットプリントの製作・追加方法
    工房に設置されているPCB基板加工機用の加工データの製作方法
    
    これらをメインとして回路を作っていただきます．
    お疲れ様でした．    












    

    






        

    

            








[fig]には画像が入る予定



        
        